@using DemoBlazorMspTechDays.Shared
@page "/contatos/editar/{id}"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<h1>Editar contato</h1>

<label id="labelNome" for="txtNome">Nome</label><label id="labelNome" for="txtNome">Nome</label>
<input type="text" bind="@nome" id="txtNome" />
<br /><br />
<label id="labelEmail" for="txtEmail">Email</label>
<input type="text" bind="@email" id="txtEmail" />
<br /><br />
<label id="labelTelRes" for="txtTelRes">Telefone Res.</label>
<input type="text" bind="@telefoneRes" id="txtTelRes" />
<br /><br />
<label id="labelTelCel" for="txtTelCel">Telefone Cel.</label>
<input type="text" bind="@telefoneCel" id="txtTelCel" />
<br /><br />
<label id="labelObs" for="txtObs">Observações</label>
<input type="text" bind="@observacao" id="txtObs" />

<button class="btn btn-primary" onclick="@SalvarContato">Salvar</button>

@functions {

    [Parameter]
    private string id { get; set; }

    string nome;
    string email;
    string telefoneRes;
    string telefoneCel;
    string observacao;

    protected override async Task OnInitAsync()
    {
        var contato = await Http.GetJsonAsync<Contato>("api/Contatos/" + id);

        if (contato != null)
        {
            nome = contato.Nome;
            email = contato.Email;
            telefoneRes = contato.TelefoneRes;
            telefoneCel = contato.TelefoneCel;
            observacao = contato.Observacoes;
        }
        else
        {
            UriHelper.NavigateTo("/contatos");
        }
    }

    async Task SalvarContato()
    {
        var contato = new Contato()
        {
            Id = int.Parse(id),
            Nome = nome,
            Email = email,
            TelefoneRes = telefoneRes,
            TelefoneCel = telefoneCel,
            Observacoes = observacao
        };

        var resultado = await Http.PutJsonAsync<Contato>($"api/Contatos/{id}", contato);

        if (resultado.Id > 0)
        {
            UriHelper.NavigateTo("/contatos");
        }
    }
}
